Given a non-empty array of integers nums, every element appears twice except for one. Find that single one.
You must implement a solution with a linear runtime complexity and use only constant extra space.

Example 1:
Input: nums = [2,2,1]
Output: 1

Example 2:
Input: nums = [4,1,2,1,2]
Output: 4


using System;
using System.Collections.Generic;

class Program
{
    static void Main()
    {
        int[] input = {2,2,1};
        
        HashSet<int> hashset = new HashSet<int>();
        
        foreach (int number in input)
        {
            if (hashset.Contains(number))
            {
                hashset.Remove(number);
            }
            else
            {
                hashset.Add(number);
            }
        }
        
        // The remaining element in the set is the unique one
        int uniqueElement = 0;
        foreach (int number in hashset)
        {
            uniqueElement = number;
        }
        
        Console.WriteLine(uniqueElement); // Output: 4
    }
}
